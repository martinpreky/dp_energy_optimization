def calc_greedy_batt_usage(cons, prod, battery_capacity = float("inf")):
    # Normalizovanie prod na 0 alebo kladne
    prod = list(map(lambda x: max(0, x), prod))
    grid = [0] * len(cons)
    batt_charge = [0] * len(cons)
    batt_discharge = [0] * len(cons)
    
    for idx, (prod_i, cons_i) in enumerate(zip(prod, cons)):
        # Do baterky dam predoslu hodnotu + produkciu
        batt_charge[idx] = batt_charge[idx-1] + prod_i
        # Bateria nebude viac nabita ako jej kapacita
        batt_charge[idx] = min(batt_charge[idx], battery_capacity)
        #print("{0:2d}. cons: {1:.2f}    prod: {2:.2f}".format(idx, cons_i, prod_i))
        #print("V baterke pred: {0:.2f}".format(batt_data[idx]))

        # Ak je cons vacsia, tak rozdiel sa bere z gridu a baterka ostane vybita
        # Ak je cons mensia, z gridu sa nic neberie, a cons sa odcita od baterky
        # Do battery discharge pridavam to, co z battery charge odcitam. Resp. "Pred" - "Po"
        grid[idx] += max(0, cons_i - batt_charge[idx])
        batt_discharge[idx] = min(cons_i, batt_charge[idx])
        batt_charge[idx] -= min(cons_i, batt_charge[idx])

        #print("V baterke po: {0:.2f}".format(batt_data[idx]))
        #print("Z gridu: {0:.2f}".format(grid_data[idx]))
    
    return (grid, batt_charge, batt_discharge)


cons = [ 1.32258333333,1.10246666667,1.13866666667,1.03693333333,1.02058333333,0.821916666667,0.953483333333,0.831583333333,0.608566666667,0.817466666667,1.32818333333,1.37548333333,1.56356666667,2.9947,2.73448333333,2.46648333333,1.26736666667,0.970616666667,2.41906666667,2.314,2.53308333333,1.72166666667,1.59716666667,1.316,1.07811666667,1.2296,1.19213333333,1.0154,0.830033333333,0.749566666667,0.80095,0.748183333333,0.65555,1.00161666667,1.14453333333,1.30433333333,1.51725,1.99356666667,2.2916,2.19185,1.80183333333,1.50378333333,1.18001666667,1.10683333333,1.21393333333,0.964583333333,1.0644,0.929883333333,0.943466666667,0.699416666667,0.69345,0.691116666667,0.661433333333,0.4653,0.488533333333,0.615016666667,0.807116666667,0.915816666667,0.499483333333,1.54913333333,2.10141666667,1.99898333333,1.87355,2.27635,2.39048333333,2.03228333333,2.12186666667,1.38661666667,0.271283333333,0.939766666667,1.655,1.23346666667,1.13618333333,0.816666666667,0.584466666667,0.563516666667,0.518566666667,0.907033333333,0.487333333333,0.337283333333,0.6787,0.7968,0.5664,0.818666666667,1.93901666667,1.74368333333,1.66828333333,2.04923333333,2.07495,1.96956666667,1.90771666667,1.87201666667,1.70141666667,1.15883333333,0.779166666667,1.0229,0.80715,0.654716666667,0.5288,0.570316666667,0.44105,0.509116666667,0.470833333333,0.671033333333,0.256933333333,0.367516666667,1.1888,1.33463333333,1.77781666667,1.82035,1.92516666667,1.89216666667,2.14755,4.84221666667,0.855183333333,0.318733333333,3.65581666667,2.10356666667,1.71431666667,1.19256666667,1.0366,1.01898333333,0.8056,0.786983333333,0.676166666667,0.553866666667,0.704666666667,0.932933333333,0.46585,0.3733,0.36555,0.372883333333,0.391683333333,0.391966666667,0.374283333333,0.30925,0.358416666667,0.353316666667,0.516016666667,1.23423333333,2.30188333333,2.4164,2.20103333333,1.82168333333,1.6893,1.30333333333,1.11248333333,0.925,0.759833333333,1.06568333333,0.774033333333,0.4568,0.357533333333,1.14833333333,1.57168333333,1.69673333333,1.64503333333,1.84106666667,1.98171666667,2.33451666667,2.2791,2.44941666667,2.5282,2.3488,2.1613,1.40221666667,1.38298333333,1.14076666667,0.920483333333,1.10515,1.08115,0.72515,1.09363333333,0.892133333333,0.328716666667,0.34195,1.29773333333,1.2404,0.912533333333,1.25028333333,1.33286666667,1.22441666667,1.70858333333,1.87391666667,1.83695,2.26628333333,1.8866,0.307083333333,0.318283333333,1.50101666667,1.72401666667,1.59288333333,1.30965,0.8782,0.96095,0.879733333333,0.7236,0.659616666667,0.62625,0.7334,0.95835,0.5201,0.3536,2.0153,1.64286666667,1.74416666667,0.376633333333,0.3622,0.36675,0.366766666667,0.33725,0.343316666667,0.33615,0.333383333333,0.351233333333,0.881216666667 ]
prod = [-0.00541666666667,-0.00556666666667,-0.00546666666667,-0.00575,-0.00558333333333,-0.00568333333333,-0.00563333333333,0.0850333333333,0.585716666667,1.53701666667,2.42105,2.99285,3.33421666667,3.43931666667,3.1809,3.00086666667,1.3198,0.633916666667,0.643116666667,0.165933333333,0.0048,-0.00501666666667,-0.00515,-0.0054,-0.00555,-0.00511666666667,-0.00556666666667,-0.00551666666667,-0.00563333333333,-0.00563333333333,-0.00561666666667,0.0706666666667,0.5904,1.51823333333,2.37933333333,2.90166666667,3.2265,3.30908333333,3.13088333333,1.04123333333,0.43315,0.337616666667,0.1788,0.01385,-0.00631666666667,-0.0058,-0.00638333333333,-0.00591666666667,-0.0058,-0.00603333333333,-0.00603333333333,-0.00608333333333,-0.00616666666667,-0.00621666666667,-0.00611666666667,0.0564166666667,0.5706,1.54846666667,2.44703333333,2.95698333333,3.03758333333,3.0207,2.93855,2.68595,1.4816,1.11098333333,0.618633333333,0.0454833333333,-0.0075,-0.00545,-0.00515,-0.0054,-0.0055,-0.0057,-0.00568333333333,-0.00588333333333,-0.00615,-0.00615,-0.00665,0.0683833333333,0.60375,1.62861666667,2.52683333333,3.08456666667,3.4025,3.53405,3.41285,3.06515,2.47143333333,1.62576666667,0.643883333333,0.0968666666667,-0.00681666666667,-0.00531666666667,-0.00556666666667,-0.00555,-0.00571666666667,-0.00591666666667,-0.00605,-0.00598333333333,-0.00598333333333,-0.00636666666667,-0.00641666666667,0.0743333333333,0.598266666667,1.60451666667,2.49466666667,3.04276666667,3.42125,3.39385,3.37301666667,3.05031666667,2.45611666667,1.59891666667,0.638283333333,0.098,-0.00611666666667,-0.00511666666667,-0.00515,-0.00536666666667,-0.0055,-0.0056,-0.0058,-0.00576666666667,-0.00595,-0.00565,-0.0057,0.0897333333333,0.4675,1.24421666667,2.39605,3.1108,3.39441666667,3.5356,3.07761666667,3.1728,2.45163333333,1.61535,0.5577,0.08285,-0.00636666666667,-0.0047,-0.00478333333333,-0.00483333333333,-0.00521666666667,-0.00541666666667,-0.00556666666667,-0.0056,-0.00588333333333,-0.00556666666667,-0.0071,0.175983333333,0.625116666667,1.52775,2.31253333333,2.91816666667,3.47236666667,3.602,3.52828333333,3.04745,2.47623333333,1.36913333333,0.645333333333,0.0713166666667,-0.00603333333333,-0.00515,-0.00515,-0.00528333333333,-0.00556666666667,-0.00553333333333,-0.0059,-0.0059,-0.00553333333333,-0.00578333333333,-0.00631666666667,0.13565,0.323983333333,0.543616666667,2.3512,1.7907,1.8399,2.53428333333,2.93193333333,3.00558333333,2.47421666667,1.67046666667,0.48005,0.0758166666667,-0.00598333333333,-0.00515,-0.0052,-0.00545,-0.0054,-0.00551666666667,-0.00548333333333,-0.0056,-0.00566666666667,-0.00568333333333,-0.00581666666667,0.08635,0.614983333333,1.10331666667,1.82273333333,2.47496666667,3.51731666667,3.6476,3.17053333333,2.61755,2.41141666667,1.5661,0.357216666667,0.07005,-0.00621666666667,-0.00558333333333,-0.00556666666667,-0.0055]

calc_greedy_batt_usage(cons, prod, battery_capacity=10)